[build-system]
requires = ["setuptools>=67", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "maraboupy"
version = "1.0.0"
authors = [{ name = "The Marabou Development Team" }]
description = "A package wrapping the Marabou Neural Network Verification tool."
readme = "README.md"
license = { file = "COPYING" }
requires-python = ">=3.7,<3.12"

[project.scripts]
Marabou = "maraboupy.MarabouMain:main"

[project.optional-dependencies]
test = [
  "pytest>=7.2.1,<8",
  "pytest-cov>=4.0.0,<5",
  "numpy>=1.21.0,<2",
  "tensorflow>=2.10.0,<3",
  "onnx>=1.12.0,<2",
  "onnxruntime>=1.12.0,<2",
  "torch>=1.11.0,<2",
]

[tool.setuptools]
packages = ["maraboupy"]

[tool.bumpver]
current_version = "v1.0.0"
version_pattern = "vMAJOR.MINOR.PATCH[-TAG]"
commit_message = "bump version {old_version} -> {new_version}"
commit = true
tag = true
push = true

[tool.bumpver.file_patterns]
"pyproject.toml" = [
  '^version = "{pep440_version}"$',
  '^current_version = "{version}"$',
]
"CMakeLists.txt" = ['^set(MARABOU_VERSION {pep440_version})$']

[tool.cibuildwheel]
# 2023-04-17: cross-compilation with cibuildwheel does not work with our CMake configuration
archs = ["native"]
build-frontend = "build"
skip = [
  # 2023-04-16: pybind11 does not support PyPy
  "pp*",
  # 2023-04-16: skip building musllinux wheels
  "*musllinux*"
]
before-test = ["python {package}/setup.py build_ext --inplace"]
test-command = "pytest {package}/maraboupy/test"
test-extras = ["test"]
test-skip = [
  # 2023-04-15: onnxruntime does not support Python 3.11
  "cp311-*"
]

[tool.cibuildwheel.linux]
before-all = "yum install -y wget"

[tool.cibuildwheel.macos]
test-skip = [
  # 2023-04-15: onnxruntime does not support Python 3.11
  "cp311-*",
  # 2023-04-15: Skip trying to test arm64 builds on Intel Macs
  "*-macosx_arm64",
  "*-macosx_universal2:arm64"
]

[tool.tox]
legacy_tox_ini = """
[tox]
min_version = 4
env_list = py{37,38,39,310,311}-{lin,mac,win}

[testenv:py{37,38,39,310,311}-{lin,mac,win}]
package = external
package_env = build-{env_name}
platform =
  lin: linux
  mac: darwin
  win: win32
allowlist_externals =
  sh
deps =
  -rmaraboupy/test_requirements.txt
commands =
  {env_python} -m pytest {posargs}

[testenv:build-py{37,38,39,310,311}-{lin,mac,win}]
deps =
  build
  auditwheel; sys_platform == 'linux'
  delocate; sys_platform == 'darwin'
set_env =
  env_python = {env_python}
  package_root = {package_root}
  dist_dir = {package_root}{/}dist
  dist_tmp_dir = {env_tmp_dir}{/}dist
package_glob =
  py37-lin: {env:dist_dir}{/}*cp37*manylinux*.whl
  py38-lin: {env:dist_dir}{/}*cp38*manylinux*.whl
  py39-lin: {env:dist_dir}{/}*cp39*manylinux*.whl
  py310-lin: {env:dist_dir}{/}*cp310*manylinux*.whl
  py311-lin: {env:dist_dir}{/}*cp311*manylinux*.whl
  py37-mac: {env:dist_dir}{/}*cp37*macosx*.whl
  py38-mac: {env:dist_dir}{/}*cp38*macosx*.whl
  py39-mac: {env:dist_dir}{/}*cp39*macosx*.whl
  py310-mac: {env:dist_dir}{/}*cp310*macosx*.whl
  py311-mac: {env:dist_dir}{/}*cp311*macosx*.whl
  py37-win: {env:dist_dir}{/}*cp37*win*.whl
  py38-win: {env:dist_dir}{/}*cp38*win*.whl
  py39-win: {env:dist_dir}{/}*cp39*win*.whl
  py310-win: {env:dist_dir}{/}*cp310*win*.whl
  py311-win: {env:dist_dir}{/}*cp311*win*.whl
allowlist_externals =
  sh
commands =
  sh {package_root}/tools/build-wheel.sh
"""
